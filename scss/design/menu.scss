@mixin transition {
  @for $i from 1 through 50 {
    &:nth-child(#{$i}) {
      transition: transform 1s #{$i * .08}s cubic-bezier(.29,1.4,.44,.96);
    }
  }
}

input.drawer {
  display: none;
  &:checked {
    & ~ .drawer-list {
       transform: translatex(0);
       border-bottom-left-radius: 0;
    }
    & ~ label {
      > i {
        background-color: transparent;
        transform: rotate(90deg);
        &:before {
          transform: translate(-50%, -50%) rotate(315deg);
        }
        &:after {
          transform: translate(-50%, -50%) rotate(-315deg);
        }
      }
      close {
        color: #000;
        width: 100%;
      }
      open {
        color: rgba(0, 0, 0, 0);
        width: 0;
      }
    }
  }
}

label.drawer-label {
  position: fixed;
  top: 15px;
  right: 15px;
  z-index: 9999;
  display: block;
  height: 50px;
  width: 50px;

  &:hover {
    cursor: pointer;
  }

  > i {
    position: absolute;
    width: 100%;
    height: 2px;
    top: 50%;
    background-color: #000;
    pointer-events: auto;
    transition-duration: .35s;
    transition-delay: .35s;

    &:before,
    &:after {
      position: absolute;
      display: block;
      width: 100%;
      height: 2px;
      left: 50%;
      background-color: #000;
      content: "";
      transition: transform 0.35s;
      transform-origin: 50% 50%;
    }
    &:before {
      transform: translate(-50%, -14px);
    }
    &:after {
      transform: translate(-50%, 14px);
    }
  }
}

.drawer-list {
  position: fixed;
  right: 0;
  top: 0;
  height: 100vh;
  width: 100vw;
  transform: translate(100vw, 0);
  box-sizing: border-box;
  pointer-events: none;
  transition: width 475ms ease-out, transform 450ms ease, border-radius .8s .1s ease;
  border-bottom-left-radius: 100vw;
  background-color: rgba(0, 0, 0, 0.7);
}
